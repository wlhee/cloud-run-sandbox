name: Test Python app with runsc
on: [push, pull_request]

jobs:
  test-python-runsc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install runsc
        run: |
          ARCH=$(uname -m)
          wget https://storage.googleapis.com/gvisor/releases/release/latest/${ARCH}/runsc
          wget https://storage.googleapis.com/gvisor/releases/release/latest/${ARCH}/runsc.sha512
          sha512sum -c runsc.sha512
          chmod +x runsc
          sudo mv runsc /usr/local/bin/
          
      - name: Setup container environment
        run: |
          # Create bundle directory
          mkdir -p container/rootfs
          
          # Use busybox as base (lightweight)
          wget https://busybox.net/downloads/binaries/1.35.0-x86_64-linux-musl/busybox
          chmod +x busybox
          mkdir -p container/rootfs/{bin,usr/bin,sbin,etc,proc,sys,tmp,dev}
          cp busybox container/rootfs/bin/
          
          # Create symlinks for common commands
          cd container/rootfs/bin
          for cmd in sh ls cat echo; do
            ln -s busybox $cmd
          done
          cd ../../..
          
          # Create the application directory first
          mkdir -p container/rootfs/app
          
          # Copy your application contents into the new directory
          cp -r ./* container/rootfs/app/
          
      - name: Create runtime config
        run: |
          cat > container/config.json << 'EOF'
          {
            "ociVersion": "1.0.0",
            "process": {
              "terminal": false,
              "user": { "uid": 0, "gid": 0 },
              "args": ["/bin/sh", "-c", "echo 'Container started'; ls /app; echo 'Done'"],
              "env": ["PATH=/bin:/usr/bin"],
              "cwd": "/",
              "capabilities": {
                "bounding": ["CAP_CHOWN"],
                "effective": ["CAP_CHOWN"],
                "inheritable": ["CAP_CHOWN"],
                "permitted": ["CAP_CHOWN"]
              }
            },
            "root": { "path": "rootfs", "readonly": false },
            "mounts": [
              {
                "destination": "/proc",
                "type": "proc",
                "source": "proc"
              }
            ],
            "linux": {
              "namespaces": [
                { "type": "pid" },
                { "type": "network" },
                { "type": "ipc" },
                { "type": "uts" },
                { "type": "mount" }
              ]
            }
          }
          EOF
          
      - name: Execute with runsc
        run: |
          cd container
          
          # Run the container
          sudo runsc run --bundle . myapp